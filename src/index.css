@import url("https://fonts.googleapis.com/css2?family=Allura&display=swap");
@tailwind base;
@tailwind components;
@tailwind utilities;

#root {
  background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev/svgjs" opacity="1"><defs><linearGradient gradientTransform="rotate(150, 0.5, 0.5)" x1="50%" y1="0%" x2="50%" y2="100%" id="ffflux-gradient"><stop stop-color="hsl(55, 94%, 54%)" stop-opacity="1" offset="0%"></stop><stop stop-color="hsl(167, 72%, 60%)" stop-opacity="1" offset="100%"></stop></linearGradient><filter id="ffflux-filter" x="-20%" y="-20%" width="140%" height="140%" filterUnits="objectBoundingBox" preserveAspectRatio="none" primitiveUnits="userSpaceOnUse" color-interpolation-filters="sRGB"><feTurbulence type="fractalNoise" baseFrequency="0.001 0.001" numOctaves="2" seed="2" stitchTiles="stitch" x="0%" y="0%" width="100%" height="100%" result="turbulence"></feTurbulence><feGaussianBlur stdDeviation="0 0" x="0%" y="0%" width="100%" height="100%" in="turbulence" edgeMode="duplicate" result="blur"></feGaussianBlur><feBlend mode="exclusion" x="0%" y="0%" width="100%" height="100%" in="SourceGraphic" in2="blur" result="blend"></feBlend></filter></defs><rect width="100%" height="100%" fill="url(%23ffflux-gradient)" filter="url(%23ffflux-filter)"></rect></svg>');
  background-repeat: no-repeat;
  background-size: contain;
  /*  display: grid;
    grid-template-columns: 1fr 2fr;
    align-items: center;
    padding-bottom: 4vmin;
    width: 100%; */
}

@keyframes text-clip {
  from {
    clip-path: polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

@keyframes image-in {
  from {
    clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

@keyframes outer-top {
  from {
    transform: translateY(-50%);
  }
  to {
    transform: none;
  }
}

@keyframes grow {
  from {
    height: 1px;
  }
  to {
    height: 100px;
  }
}

.zoom > * {
  animation: text-clip 1.5s 0s cubic-bezier(0.5, 0, 0.1, 1) both;
}
.test-border {
  width: 2px;
  height: auto;
  margin-left: auto;
  margin-right: auto;
  animation: grow 1s;
  animation-delay: 1s;
  animation-fill-mode: forwards;
}
.zoom p {
  font-family: "Allura";
}
.test {
  animation: image-in 1s cubic-bezier(0.5, 0, 0.1, 1) 2.2s backwards;
  border: 2px solid rgb(253 242 248);
  box-shadow: 1px 1px 10px 1px grey;
  background-color: white;
}
.contain{
  box-shadow: 1px 1px 10px 1px grey;

  
}
.newb{
  box-shadow: 1px 1px 10px 1px grey;
  width: 180px;
  height: 120px;
  object-fit: cover;
}
.b-right, .b-left{
  margin-left:auto;
  margin-right:auto;
  width: 1px;
  height:1px;
  background-color: aliceblue;
  animation: widen 1s;
  animation-delay: 1.7s;
  animation-fill-mode: forwards;
}
.b-divide{
  height:2px;
  width:80%;
  background-color: aliceblue;
}

@keyframes widen {
  from {
    width: 1px;
  }
  to {
    width: 80%;
  }
}